- platform: mqtt
  name: "ILIFE V5s Pro"
  schema: state
  availability_topic: "ilife-vacuum/LWT"
  payload_available: 'online'
  payload_not_available: 'offline'
  supported_features:
    - start
    - stop
    - return_home
    - status
    - clean_spot
    - send_command
    - battery
    - locate
    - send_command
  command_topic: "ilife-vacuum/command"
  state_topic: "ilife-vacuum/state"
  send_command_topic: 'ilife-vacuum/command'
 # set_fanspeed_topic: "ilife-vacuum/fan_speed"
  payload_stop: 'robot:stop'
  payload_start: 'robot:start'
  payload_return_to_base: 'robot:home'
  payload_locate: 'robot:locate'
  payload_clean_spot: 'robot:spot'
  json_attributes_topic: 'ilife-vacuum/status'
  json_attributes_template: "{{ value_json | tojson }}"
  retain: false


## old version sensors
#sensor:
- platform: mqtt
  name: ILIFE status mqtt
  state_topic: "ilife-vacuum/state"
  value_template: '{{ value_json.state }}'
- platform: template
  sensors:
    ilife_status:
      friendly_name: ILIFE status
      value_template: >
        {% if is_state('sensor.ilife_status_mqtt', 'goinghome') %}
          Thuis zoeken
        {% else %}
          {{ states.vacuum.ilife_robot.attributes.status }}
        {% endif %}
- platform: mqtt
  name: ILIFE battery
  state_topic: "ilife-vacuum/state"
  value_template: '{{ value_json.battery_level }}'
  unit_of_measurement: '%'
  device_class: battery
- platform: mqtt
  name: ILIFE battery voltage
  state_topic: "ilife-vacuum/state"
  value_template: '{{ value_json.battery_voltage }}'
  unit_of_measurement: V
- platform: mqtt
  name: ILIFE boottime
  state_topic: "ilife-vacuum/state"
  value_template: '{{ value_json.boottime | timestamp_custom("%d/%m/%y %H:%M") }}'
- platform: history_stats
  name: Tijd schoongemaakt vandaag
  entity_id: sensor.ilife_status
  state: 'Cleaning'
  type: time
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'


#binary_sensor:
- platform: mqtt
  name: ILIFE docked
  state_topic: "ilife-vacuum/state"
  value_template: '{{ value_json.docked }}'
  device_class: occupancy
  payload_on: true
  payload_off: false
